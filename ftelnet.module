<?php
/**
 * Implements hook_help().
 */

function ftelnet_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/config/modules#description':
      $output .= t('fTelnet module for Drupal 7.');
      break;
    case 'admin/config/bbs/ftelnet/settings':
	  $output .= t('Settings for fTelnet for Drupal 7.');
          break;
	case 'admin/config/bbs/ftelnet':
	   $output .= t('Settings for fTelnet for Drupal 7.');
	  break;
  }
  return $output;
}
/**
 * Implements hook_permission().
 */
function fTelnet_permission() {
  return array(
    'administrate fTelnet' => array(
      'title' => t('Administrate fTelnet for Drupal 7'),
      'description' => t('Allow users to administer fTelnet for Drupal 7'),
    ),
  );
}
/**
 * Check to see if they have access
 */

function fTelnet_access() {
  return user_access('administrate fTelnet');
}
/**
 * Implements hook_menu().
 */

function ftelnet_menu() {

  $items['admin/config/services/bbs/ftelnet'] = array(
    'title' => 'fTelnet Settings',
    'description' => 'Configure fTelnet.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ftelnet_options'),
    'access arguments' => array('administrate fTelnet'),
    'type' => MENU_NORMAL_ITEM,
    );

    $items['admin/config/bbs/ftelnet'] = array(
    'title' => 'fTelnet Settings',
    'description' => 'Configure fTelnet.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ftelnet_options'),
    'access arguments' => array('administrate fTelnet'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    );

    $items['admin/config/bbs/ftelnet/settings'] = array(
    'title' => 'fTelnet Settings',
    'description' => 'Configure fTelnet.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ftelnet_options'),
    'access arguments' => array('administrate fTelnet'),
    'type' => MENU_LOCAL_TASK,
    );


    return $items;
}


/**
 * Creates the settings menu at config/bbs/ftelnet/settings
 */

//function ftelnet_options($form, &$form_state) {
function ftelnet_options() {

  drupal_set_title('fTelnet Configuration');

  $form['ftelnet_ServerName'] = array(
	'#title' => t('Server Name'),
    '#type' => 'textfield',
    '#description' => t('The display name for the server'),
    '#default_value' => variable_get('ftelnet_ServerName', 'godta'),
  );
  $form['ftelnet_ConnectAnsi'] = array(
    '#title' => t('Connect Ansi'),
    '#type' => 'textfield',
    '#description' => t('Controls which ANSI file to display under the initial Connect button.'),
    '#default_value' => variable_get('ftelnet_ConnectAnsi', '/sites/all/themes/godta-teal/telnet/ftelnet-resources/prelogon.ans'),
  );
  $form['ftelnet_ConnectAnsi_Help'] = array(
    '#type' => 'fieldset',
    '#title' => t('Connect Ansi Help'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
	'#description' =>
        t('<p>
        ConnectAnsi controls which ANSI file to display under the initial Connect button<br />
		NOTE: Many webservers don\'t like the .ans extension, so use .txt instead<br />
		NOTE: This setting has no effect when ClientVars.RIP is set to 1<br />
		NOTE: This should be the full absolute path, so if the .ans file is at
        http://www.ftelnet.ca/mybbs/connectansi.txt then the absolute path would be "/mybbs/connectansi.txt"
        </p>'),
  );


  $form['ftelnet_TelnetHostName'] = array(
    '#title' => t('Telnet Host Name'),
    '#type' => 'textfield',
    '#description' => t('The URL of the bbs to connect to without the "telnet://".  e.g. (bbs.godta.com)'),
    '#default_value' => variable_get('ftelnet_TelnetHostName', 'bbs.godta.com'),
  );

  $form['ftelnet_BitsPerSecond'] = array(
    '#title' => t('Bits Per Second (e.g. 300,14400,28800)'),
    '#type' => 'textfield',
    '#description' => t('Controls how fast data is received from the remote server.'),
    '#default_value' => variable_get('ftelnet_BitsPerSecond', '115200'),
    '#size' => 3,
    '#maxlength' => 6,
  );

  $form['ftelnet_SocketPolicyPort'] = array(
    '#title' => t('Socket Policy Port'),
    '#type' => 'textfield',
    '#description' => t('Port that the flash socket policy service is running on the remote server.'),
    '#default_value' => variable_get('ftelnet_SocketPolicyPort', '843'),
    '#size' => 1,
    '#maxlength' => 5,
  );

  $form['ftelnet_TelnetPort'] = array(
    '#title' => t('Telnet Port'),
    '#type' => 'textfield',
    '#description' => t('Port to connect to bbs.'),
    '#default_value' => variable_get('ftelnet_TelnetPort', '23'),
    '#size' => 1,
    '#maxlength' => 5,
  );


  $form['ftelnet_ConnectButtonX'] = array(
  '#title' => t('Connect Button X'),
   '#type' => 'textfield',
   '#description' => t('X Position of the Connect Button.'),
   '#default_value' => variable_get('ftelnet_ConnectButtonX', '-0.32'),
   '#size' => 1,
   '#maxlength' => 5,

);
  $form['ftelnet_ConnectButtonY'] = array(
   '#title' => t('Connect Button Y'),
   '#type' => 'textfield',
   '#description' => t('Y Position of the Connect Button.'),
   '#default_value' => variable_get('ftelnet_ConnectButtonY', '0.68'),
   '#maxlength' => 5,
   '#size' => 1,
);
  $form['ftelnet_ConnectButtonXY_Help'] = array(
    '#type' => 'fieldset',
    '#title' => t('Connect XY Button Help'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
	'#description' =>
        t('<p>Note : To center the connect button use 0 for both values.<br />' .
        'Note : To position relative to the top or left use positive values.  To position relative to the bottom or right, use negative values.<br />' .
        'Note : To position based on percent instead of pixel count, use values between 0 and 1 (or 0 and -1) (0.50 = 50%, for example).</p>'),
  );


  // Custom validation to make sure the user is entering numbers.
//  $form['#validate'][] = 'ftelnet_options_validate';

  return system_settings_form($form);
}

/**
 * Validate settings for ftelnet_options
 */

function ftelnet_options_validate($form, &$form_state) {


  //$number = $form_state['values']['ee_awards_number'];
  // Check to make sure it is a number and that is a maximum of 2 digits.
  //if (!is_numeric($number) || strlen($number) > 2) {
    //form_set_error('ee_awards_number', t('You must enter a number from 0 to 99.'));
 // }
}

/**
 * Implements hook_block_info().
 *
 */
function ftelnet_block_info() {
  $blocks['fTelnet'] = array(
    'info' => t('fTelnet for Drupal 7'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_init().
 */

function ftelnet_init() {

  $path = drupal_get_path('module', 'ftelnet');

  drupal_add_css($path . '/css/ftelnet.css');
  drupal_add_js($path . '/js/ClientVars.js', array('type' => 'file', 'scope' => 'footer', 'weight' => 20));

    $ServerName  	  = variable_get('ftelnet_ServerName', 'godta');
    $ConnectAnsi 	  = variable_get('ftelnet_ConnectAnsi', '/sites/all/themes/godta-teal/telnet/ftelnet-resources/prelogon.ans');
    $TelnetHostName   = variable_get('ftelnet_TelnetHostName', 'bbs.godta.com');
    $BitsPerSecond    = variable_get('ftelnet_BitsPerSecond', '115200');
    $SocketPolicyPort = variable_get('ftelnet_SocketPolicyPort', '843');
    $TelnetPort 	  = variable_get('ftelnet_TelnetPort', '23');
    $ConnectButtonX   = variable_get('ftelnet_ConnectButtonX', '-0.32');
    $ConnectButtonY   = variable_get('ftelnet_ConnectButtonY', '0.68');



  drupal_add_js(
  '
  ClientVars.ServerName = "'.$ServerName.'";
  ClientVars.ConnectAnsi = "'.$ConnectAnsi . '";
  ClientVars.TelnetHostName = "'.$TelnetHostName.'";
  ClientVars.BitsPerSecond = '.$BitsPerSecond.';
  ClientVars.SocketPolicyPort = '.$SocketPolicyPort.';
  ClientVars.TelnetPort = '.$TelnetPort.';
  ClientVars.ConnectButtonX = '.$ConnectButtonX.';
  ClientVars.ConnectButtonY = '.$ConnectButtonY.';

  '
  , array('type'=> 'inline', 'scope' => 'footer', 'weight' => 21));

  drupal_add_js($path . '/js/ClientFuncs.js', array('type' => 'file', 'scope' => 'footer', 'weight' => 22));
  drupal_add_js($path . '/js/swfobject.js', array('type' => 'file', 'scope' => 'footer', 'weight' => 23));

  drupal_add_js('

   // Try to use fTelnet
		swfobject.embedSWF(
        "/'.$path.'/resource/fTelnet.swf",
        "ClientContainer", // Must match the id= value above
        (location.href.indexOf("file:") === 0) ? 720 : "100%",
        (location.href.indexOf("file:") === 0) ? 400 : "100%",
        "10.2.0",
        "/'.$path.'/resource/playerProductInstall.swf",
        ClientVars,
        { allowfullscreen: "true", allowscriptaccess: "sameDomain", bgcolor: "#ffffff", quality: "high" },
        { align: "middle", id: "fTelnet", name: "fTelnet", swliveconnect: "true" },
        function (callbackObj) {
        if (!callbackObj.success) {
        // Failed to use fTelnet, and this method has no fall-back
        alert("Sorry, I wasn\'t able to load fTelnet\n\nTry again with Flash 10+ installed");
        }
			}
				);

', array('type' => 'inline', 'scope' => 'footer', 'weight' => 24));
}
/**
 * Implements hook_block_view().
 *
 * Renders a HTML-ul list containing the News Ticker.
 */
function ftelnet_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'fTelnet':

$output = '<div id="ftelnet-wrapper"><span id="ClientContainer"></span></div>';


      // Create the block.
      $block['subject'] = t('fTelnet for Drupal 7');
      $block['content'] = $output;
      break;
}
return $block;
  }




